- name: Add Docker's official GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: yes

- name: Get system architecture
  command: 'dpkg --print-architecture' # prints architecture of the vm
  register: system_architecture
  changed_when: false

- name: Set architecture variable
  set_fact:
    deb_arch: '{{ system_architecture.stdout }}' # Creating a local variables from the output of the system_architecture step above
  when: system_architecture.stdout is defined

- name: Get Ubuntu distribution codename
  command: 'lsb_release -c -s'
  register: ubuntu_codename
  changed_when: false

- name: Set Ubuntu codename variable
  set_fact:
    ubuntu_distro: '{{ ubuntu_codename.stdout_lines[-1] | trim }}'
  when: ubuntu_codename.stdout is defined

- name: Add Docker's official APT repository
  ansible.builtin.apt_repository:
    repo: deb [arch={{ deb_arch }}] https://download.docker.com/linux/ubuntu {{ ubuntu_distro }} stable
    state: present
    filename: docker
  become: yes

- name: Install Docker
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes
  notify: restart docker
  become: yes

- name: Add user to docker group
  ansible.builtin.user:
    name: ubuntu
    groups: docker
    append: yes
  become: yes
# To confirm, running 'docker' without sudo command should work

- name: Reset SSH connection to allow user changes to affect current session
  ansible.builtin.meta: reset_connection

- name: Create /etc/docker directory
  become: yes
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    owner: root
    group: root
    mode: '755'
# To confirm in vm, ls /etc should also have 'docker' directory

- name: Create /etc/docker/daemon.json
  become: yes
  ansible.builtin.copy:
    src: files/daemon.json
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: '644'
  notify: restart docker
# These are docker settings picked up when docker is started.
# To confirm in vm, cat /etc/docker/daemon.json

- name: Ensure Docker is started and enabled at boot
  become: yes
  ansible.builtin.systemd:
    name: docker
    enabled: yes
    state: started
# To confirm in vm, run systemctl docker status

- name: Install Python Docker SDK
  become: yes
  ansible.builtin.apt:
    name: python3-docker
    state: present
    update_cache: yes
